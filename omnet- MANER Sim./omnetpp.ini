[General]
network = AODVNetwork


*.numHosts = 10
num-rngs = 25
debug-on-errors = true
**.mobility.rng-0 = 1
**.wlan[*].mac.rng-0 = 2
tkenv-plugin-path = ../../../etc/plugins

# channel physical parameters
**.wlan[*].typename = "AckingWirelessInterface"
**.wlan[*].bitrate = 20Mbps
**.wlan[*].mac.headerLength = 20B
**.wlan[*].radio.typename = "UnitDiskRadio"
**.wlan[*].radio.transmitter.headerLength = 96b
**.wlan[*].radio.transmitter.communicationRange = 40m
**.wlan[*].radio.transmitter.interferenceRange = 40m
**.wlan[*].radio.transmitter.detectionRange = 40m
**.wlan[*].radio.receiver.ignoreInterference = true

**.aodv.activeRouteTimeout = 1s
**.radioMedium.rangeFilter = "communicationRange"
**.refillPeriod = 1s
#**.radioMedium.refillPeriod = 1s
**.radioMedium.mediumLimitCache.communicationRange = 40m
**.radioMedium.neighborCache.typename = "NeighborListNeighborCache"
**.radioMedium.neighborCache.range = 40m


**.constraintAreaMinX = 0m
**.constraintAreaMinY = 0m
**.constraintAreaMaxX = 600m
**.constraintAreaMaxY = 600m
**.constraintAreaMinZ = 0m
**.constraintAreaMaxZ = 0m
**.updateInterval = 0.01s # test with 0s too, and let getCurrentPosition update the display string from a test module


# ping app (host[0] pinged by others)
#*.host[0].numApps = 1
#*.host[0].app[0].typename = "PingApp"
#*.host[0].app[0].startTime = uniform(1s,5s)
#*.host[0].app[0].printPing = true

# nic settings
**.wlan[*].mgmt.frameCapacity = 10
**.wlan[*].mac.retryLimit = 7

# lifecycle
**.hasStatus = true


*.hasVisualizer = true
*.visualizer.mobilityVisualizer.moduleFilter = "**.mobility" # filter for host mobilities, ignore mobility superposition elements
*.visualizer.mobilityVisualizer.displayMovementTrails = false
*.visualizer.mediumVisualizer.displayCommunicationRanges = true

*.visualizer.mediumVisualizer.displayInterferenceRanges = false
*.visualizer.mediumVisualizer.displaySignals = false

*.configurator.addStaticRoutes = false


*.host*.numApps = 1
*.host*.app[0].typename = "UdpBasicApp"
*.host*.app[0].localPort = 100
*.host*.app[0].sendInterval = 0.5s
*.host*.app[0].messageLength = 1000B
#*.host*.app[0].stopTime


**.hasIpv4 = true
**.hasIpv6 = false
**.hasGn =   false
*.host*.app[0].destAddresses = "host[*]"
*.host*.app[0].destPort = 1000


[Config Random]
#**.host*.mobility.typename = "RandomWaypointMobility"
#**.host[0].mobility.speed = 10*uniform(100mps,50mps)
#**.host*.mobility.speed = uniform(20mps,50mps)
#**.host*.mobility.waitTime = uniform(3s,8s)
**.host*.mobility.typename = "LinearMobility"
**.host*.mobility.initFromDisplayString = false
**.host*.mobility.speed = 50mps
**.host*.mobility.angle = 30deg 
**.host*.mobility.initialX = uniform(100m,150m)
**.host*.mobility.initialY = uniform(100m,200m)




[Config CircleMobility1]
*.numHosts = 12 * 2

**.host*.mobility.typename = "CircleMobility"


# SMALL CIRCLE
**.host[0..11].mobility.cx = 400m
**.host[0..11].mobility.cy = 400m
**.host[0..11].mobility.r = 100m
**.host[0..11].mobility.speed = 2000mps

**.host[1].mobility.startAngle = 0deg
**.host[2].mobility.startAngle = 30deg
**.host[3].mobility.startAngle = 60deg
**.host[4].mobility.startAngle = 90deg
**.host[5].mobility.startAngle = 120deg
**.host[6].mobility.startAngle = 150deg
**.host[7].mobility.startAngle = 180deg
**.host[8].mobility.startAngle = 210deg
**.host[9].mobility.startAngle = 240deg
**.host[10].mobility.startAngle = 270deg
**.host[11].mobility.startAngle = 300deg
**.host[0].mobility.startAngle = 330deg


# BIG CIRCLE
**.host[12..23].mobility.cx = 200m
**.host[12..23].mobility.cy = 200m
**.host[12..23].mobility.r = 130m
**.host[12..23].mobility.speed = -2000mps

**.host[12].mobility.startAngle = 0deg
**.host[13].mobility.startAngle = 30deg
**.host[14].mobility.startAngle = 90deg
**.host[15].mobility.startAngle = 120deg
**.host[16].mobility.startAngle = 150deg
**.host[17].mobility.startAngle = 180deg
**.host[18].mobility.startAngle = 210deg
**.host[19].mobility.startAngle = 240deg
**.host[20].mobility.startAngle = 270deg
**.host[21].mobility.startAngle = 300deg
**.host[22].mobility.startAngle = 330deg
**.host[23].mobility.startAngle = 60deg



[Config AttachedMobility]
*.numHosts = 10



# mobility visualizer shows velocity and orientation
*.hasVisualizer = true
*.visualizer.mobilityVisualizer.moduleFilter = "**.mobility" # filter for host mobilities, ignore mobility superposition elements
#*.visualizer.mobilityVisualizer.displayMovementTrails = t
#*.visualizer.mobilityVisualizer.displayOrientations = true
#*.visualizer.mobilityVisualizer.displayVelocities = true

# other hosts are also moving around in a larger circle following host[0]
**.host[0].mobility.typename = "CircleMobility"
**.host[0].mobility.cx = 300m
**.host[0].mobility.cy = 200m
**.host[0].mobility.r = 150m
**.host[0].mobility.speed = 40mps

# other hosts are also moving around in a larger circle following host[0]
**.host[*].mobility.typename = "AttachedMobility"
**.host[*].mobility.mobilityModule = "^.^.host[0].mobility"

**.host[1].mobility.offsetX = 10m
**.host[1].mobility.offsetHeading = 90deg

**.host[2].mobility.offsetX = -50m
**.host[2].mobility.offsetHeading = -120deg

**.host[3].mobility.offsetX = 80m
**.host[3].mobility.offsetHeading = 130deg

**.host[4].mobility.offsetX = 150m
**.host[4].mobility.offsetHeading = 150deg

**.host[5].mobility.offsetX = -120m
**.host[5].mobility.offsetHeading = 180deg

**.host[6].mobility.offsetX = 190m
**.host[6].mobility.offsetHeading = 200deg

**.host[7].mobility.offsetX = 200m
**.host[7].mobility.offsetHeading = 230deg

**.host[8].mobility.offsetX = 220m
**.host[8].mobility.offsetHeading = 250deg

**.host[9].mobility.offsetX = -160m
**.host[9].mobility.offsetHeading = 290deg



[Config SuperpositioningMobility]

*.numHosts = 10

# mobility visualizer shows velocity and orientation
*.hasVisualizer = true
*.visualizer.mobilityVisualizer.moduleFilter = "**.mobility" # filter for host mobilities, ignore mobility superposition elements


**.host[*].mobility.typename = "SuperpositioningMobility"
**.host[*].mobility.numElements = 2


**.host*.mobility.element[0].typename = "CircleMobility"


# ---- 1st movement

**.host[0..11].mobility.element[0].cx = 200m
**.host[0..11].mobility.element[0].cy = 200m
**.host[0..11].mobility.element[0].r = 90m
**.host[0..11].mobility.element[0].speed = 2000mps

**.host[1].mobility.element[0].startAngle = 0deg
**.host[2].mobility.element[0].startAngle = 30deg
**.host[3].mobility.element[0].startAngle = 60deg
**.host[4].mobility.element[0].startAngle = 90deg
**.host[5].mobility.element[0].startAngle = 120deg
**.host[6].mobility.element[0].startAngle = 150deg
**.host[7].mobility.element[0].startAngle = 180deg
**.host[8].mobility.element[0].startAngle = 210deg
**.host[9].mobility.element[0].startAngle = 240deg
**.host[10].mobility.element[0].startAngle = 270deg
**.host[11].mobility.element[0].startAngle = 300deg
**.host[0].mobility.element[0].startAngle = 330deg


# ---- 2nd movement 

**.host*.mobility.element[1].typename = "LinearMobility"
**.host*.mobility.element[1].initFromDisplayString = false
**.host*.mobility.element[1].speed = 50mps
**.host*.mobility.element[1].angle = 30deg 
**.host*.mobility.element[1].initialX = uniform(100m,150m)
**.host*.mobility.element[1].initialY = uniform(100m,200m)